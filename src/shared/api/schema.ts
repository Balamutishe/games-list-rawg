/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/creator-roles": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get a list of creator positions (jobs). */
        get: operations["creator-roles_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/creators": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get a list of game creators. */
        get: operations["creators_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/creators/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Person. */
                id: string;
            };
            cookie?: never;
        };
        /** Get details of the creator. */
        get: operations["creators_read"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/developers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get a list of game developers. */
        get: operations["developers_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/developers/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Developer. */
                id: string;
            };
            cookie?: never;
        };
        /** Get details of the developer. */
        get: operations["developers_read"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/games": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get a list of games. */
        get: operations["games_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/games/{game_pk}/additions": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                game_pk: string;
            };
            cookie?: never;
        };
        /** Get a list of DLC's for the game, GOTY and other editions, companion apps, etc. */
        get: operations["games_additions_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/games/{game_pk}/development-team": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                game_pk: string;
            };
            cookie?: never;
        };
        /** Get a list of individual creators that were part of the development team. */
        get: operations["games_development-team_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/games/{game_pk}/game-series": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                game_pk: string;
            };
            cookie?: never;
        };
        /** Get a list of games that are part of the same series. */
        get: operations["games_game-series_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/games/{game_pk}/parent-games": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                game_pk: string;
            };
            cookie?: never;
        };
        /** Get a list of parent games for DLC's and editions. */
        get: operations["games_parent-games_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/games/{game_pk}/screenshots": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                game_pk: string;
            };
            cookie?: never;
        };
        /** Get screenshots for the game. */
        get: operations["games_screenshots_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/games/{game_pk}/stores": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                game_pk: string;
            };
            cookie?: never;
        };
        /** Get links to the stores that sell the game. */
        get: operations["games_stores_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/games/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Game. */
                id: string;
            };
            cookie?: never;
        };
        /** Get details of the game. */
        get: operations["games_read"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/games/{id}/achievements": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Game. */
                id: string;
            };
            cookie?: never;
        };
        /** Get a list of game achievements. */
        get: operations["games_achievements_read"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/games/{id}/movies": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Game. */
                id: string;
            };
            cookie?: never;
        };
        /** Get a list of game trailers. */
        get: operations["games_movies_read"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/games/{id}/reddit": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Game. */
                id: string;
            };
            cookie?: never;
        };
        /** Get a list of most recent posts from the game's subreddit. */
        get: operations["games_reddit_read"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/games/{id}/suggested": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Game. */
                id: string;
            };
            cookie?: never;
        };
        /** Get a list of visually similar games, available only for business and enterprise API users. */
        get: operations["games_suggested_read"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/games/{id}/twitch": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Game. */
                id: string;
            };
            cookie?: never;
        };
        /** Get streams on Twitch associated with the game, available only for business and enterprise API users. */
        get: operations["games_twitch_read"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/games/{id}/youtube": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Game. */
                id: string;
            };
            cookie?: never;
        };
        /** Get videos from YouTube associated with the game, available only for business and enterprise API users. */
        get: operations["games_youtube_read"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/genres": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get a list of video game genres. */
        get: operations["genres_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/genres/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Genre. */
                id: string;
            };
            cookie?: never;
        };
        /** Get details of the genre. */
        get: operations["genres_read"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/platforms": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get a list of video game platforms. */
        get: operations["platforms_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/platforms/lists/parents": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get a list of parent platforms.
         * @description For instance, for PS2 and PS4 the “parent platform” is PlayStation.
         */
        get: operations["platforms_lists_parents_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/platforms/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Platform. */
                id: string;
            };
            cookie?: never;
        };
        /** Get details of the platform. */
        get: operations["platforms_read"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/publishers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get a list of video game publishers. */
        get: operations["publishers_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/publishers/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Publisher. */
                id: string;
            };
            cookie?: never;
        };
        /** Get details of the publisher. */
        get: operations["publishers_read"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/stores": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get a list of video game storefronts. */
        get: operations["stores_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/stores/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Store. */
                id: string;
            };
            cookie?: never;
        };
        /** Get details of the store. */
        get: operations["stores_read"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/tags": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get a list of tags. */
        get: operations["tags_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/tags/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Tag. */
                id: string;
            };
            cookie?: never;
        };
        /** Get details of the tag. */
        get: operations["tags_read"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: never;
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    "creator-roles_list": {
        parameters: {
            query?: {
                /** @description A page number within the paginated result set. */
                page?: string;
                /** @description Number of results to return per page. */
                page_size?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    creators_list: {
        parameters: {
            query?: {
                /** @description A page number within the paginated result set. */
                page?: string;
                /** @description Number of results to return per page. */
                page_size?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    creators_read: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    developers_list: {
        parameters: {
            query?: {
                /** @description A page number within the paginated result set. */
                page?: string;
                /** @description Number of results to return per page. */
                page_size?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    developers_read: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Developer. */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    games_list: {
        parameters: {
            query?: {
                /** @description A page number within the paginated result set. */
                page?: string;
                /** @description Number of results to return per page. */
                page_size?: string;
                /** @description Search query. */
                search?: string;
                /** @description Disable fuzziness for the search query. */
                search_precise?: string;
                /** @description Mark the search query as exact. */
                search_exact?: string;
                /** @description Filter by parent platforms, for example: `1,2,3`. */
                parent_platforms?: string;
                /** @description Filter by platforms, for example: `4,5`. */
                platforms?: string;
                /** @description Filter by stores, for example: `5,6`. */
                stores?: string;
                /** @description Filter by developers, for example: `1612,18893` or `valve-software,feral-interactive`. */
                developers?: string;
                /** @description Filter by publishers, for example: `354,20987` or `electronic-arts,microsoft-studios`. */
                publishers?: string;
                /** @description Filter by genres, for example: `4,51` or `action,indie`. */
                genres?: string;
                /** @description Filter by tags, for example: `31,7` or `singleplayer,multiplayer`. */
                tags?: string;
                /** @description Filter by creators, for example: `78,28` or `cris-velasco,mike-morasky`. */
                creators?: string;
                /** @description Filter by a release date, for example: `2010-01-01,2018-12-31.1960-01-01,1969-12-31`. */
                dates?: string;
                /** @description Filter by an update date, for example: `2020-12-01,2020-12-31`. */
                updated?: string;
                /** @description Filter by platforms count, for example: `1`. */
                platforms_count?: string;
                /** @description Filter by a metacritic rating, for example: `80,100`. */
                metacritic?: string;
                /** @description Exclude games from a particular collection, for example: `123`. */
                exclude_collection?: string;
                /** @description Exclude additions. */
                exclude_additions?: string;
                /** @description Exclude games which have additions. */
                exclude_parents?: string;
                /** @description Exclude games which included in a game series. */
                exclude_game_series?: string;
                /** @description Exclude stores, for example: `5,6`. */
                exclude_stores?: string;
                /** @description Available fields: `name`, `released`, `added`, `created`, `updated`, `rating`, `metacritic`. You can reverse the sort order adding a hyphen, for example: `-released`. */
                ordering?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    games_additions_list: {
        parameters: {
            query?: {
                /** @description A page number within the paginated result set. */
                page?: string;
                /** @description Number of results to return per page. */
                page_size?: string;
            };
            header?: never;
            path: {
                game_pk: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "games_development-team_list": {
        parameters: {
            query?: {
                /** @description Which field to use when ordering the results. */
                ordering?: string;
                /** @description A page number within the paginated result set. */
                page?: string;
                /** @description Number of results to return per page. */
                page_size?: string;
            };
            header?: never;
            path: {
                game_pk: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "games_game-series_list": {
        parameters: {
            query?: {
                /** @description A page number within the paginated result set. */
                page?: string;
                /** @description Number of results to return per page. */
                page_size?: string;
            };
            header?: never;
            path: {
                game_pk: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "games_parent-games_list": {
        parameters: {
            query?: {
                /** @description A page number within the paginated result set. */
                page?: string;
                /** @description Number of results to return per page. */
                page_size?: string;
            };
            header?: never;
            path: {
                game_pk: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    games_screenshots_list: {
        parameters: {
            query?: {
                /** @description Which field to use when ordering the results. */
                ordering?: string;
                /** @description A page number within the paginated result set. */
                page?: string;
                /** @description Number of results to return per page. */
                page_size?: string;
            };
            header?: never;
            path: {
                game_pk: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    games_stores_list: {
        parameters: {
            query?: {
                /** @description Which field to use when ordering the results. */
                ordering?: string;
                /** @description A page number within the paginated result set. */
                page?: string;
                /** @description Number of results to return per page. */
                page_size?: string;
            };
            header?: never;
            path: {
                game_pk: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    games_read: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description An ID or a slug identifying this Game. */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    games_achievements_read: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description An ID or a slug identifying this Game. */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    games_movies_read: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description An ID or a slug identifying this Game. */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    games_reddit_read: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description An ID or a slug identifying this Game. */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    games_suggested_read: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description An ID or a slug identifying this Game. */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    games_twitch_read: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description An ID or a slug identifying this Game. */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    games_youtube_read: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description An ID or a slug identifying this Game. */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    genres_list: {
        parameters: {
            query?: {
                /** @description Which field to use when ordering the results. */
                ordering?: string;
                /** @description A page number within the paginated result set. */
                page?: string;
                /** @description Number of results to return per page. */
                page_size?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    genres_read: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Genre. */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    platforms_list: {
        parameters: {
            query?: {
                /** @description Which field to use when ordering the results. */
                ordering?: string;
                /** @description A page number within the paginated result set. */
                page?: string;
                /** @description Number of results to return per page. */
                page_size?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    platforms_lists_parents_list: {
        parameters: {
            query?: {
                /** @description Which field to use when ordering the results. */
                ordering?: string;
                /** @description A page number within the paginated result set. */
                page?: string;
                /** @description Number of results to return per page. */
                page_size?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    platforms_read: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Platform. */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    publishers_list: {
        parameters: {
            query?: {
                /** @description A page number within the paginated result set. */
                page?: string;
                /** @description Number of results to return per page. */
                page_size?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    publishers_read: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Publisher. */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    stores_list: {
        parameters: {
            query?: {
                /** @description Which field to use when ordering the results. */
                ordering?: string;
                /** @description A page number within the paginated result set. */
                page?: string;
                /** @description Number of results to return per page. */
                page_size?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    stores_read: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Store. */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    tags_list: {
        parameters: {
            query?: {
                /** @description A page number within the paginated result set. */
                page?: string;
                /** @description Number of results to return per page. */
                page_size?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    tags_read: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Tag. */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
